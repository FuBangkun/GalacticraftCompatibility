/*
 * Copyright (c) 2024-2025 FuBangkun. All Rights Reserved.
 */

apply from: 'gradle/scripts/helpers.gradle'

setDefaultProperty('publish_to_curseforge', true, false)
setDefaultProperty('publish_to_modrinth', true, false)

// Documentation here: https://github.com/matthewprenger/CurseGradle/wiki/
if (propertyBool('publish_to_curseforge')) {
    apply plugin: 'com.matthewprenger.cursegradle'
    assertProperty('curseforge_project_id')
    assertProperty('release_type')
    setDefaultProperty('curseforge_debug', false, false)
    curseforge {
        apiKey = System.getenv('CURSEFORGE_TOKEN') == null ? "" : System.getenv('CURSEFORGE_TOKEN')
        // noinspection GroovyAssignabilityCheck
        project {
            id = propertyString('curseforge_project_id')
            addGameVersion 'Java 8'
            addGameVersion 'Forge'
            addGameVersion '1.12.2'
            releaseType = propertyString('release_type')
            if (!propertyBool('publish_with_changelog')) {
                changelog = parserChangelog()
                changelogType = 'markdown'
            }
            mainArtifact tasks.reobfJar, {
                displayName = "${propertyString('mod_name')} ${propertyString('mod_version')}"
            }
            options {
                debug = propertyBool('curseforge_debug')
            }
        }
    }
}

// Documentation here: https://github.com/modrinth/minotaur
if (propertyBool('publish_to_modrinth')) {
    apply plugin: 'com.modrinth.minotaur'
    assertProperty('modrinth_project_id')
    assertProperty('release_type')
    setDefaultProperty('modrinth_debug', false, false)
    modrinth {
        token = System.getenv('MODRINTH_TOKEN') ? "" : System.getenv('MODRINTH_TOKEN')
        projectId = propertyString('modrinth_project_id')
        versionNumber = propertyString('mod_version')
        versionType = propertyString('release_type')
        uploadFile = tasks.reobfJar
        gameVersions = ['1.12.2']
        loaders = ['forge']
        debugMode = propertyBool('modrinth_debug')
        if (!propertyBool('publish_with_changelog')) {
            changelog = parserChangelog()
        }
        if (propertyBool('modrinth_sync_readme')) {
            syncBodyFrom = file('README.md').text
            tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
        }
    }
}